LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.ALL;
USE ieee.std_logic_unsigned.all;

ENTITY DataMemory IS
PORT (
			Clock					: 		IN STD_LOGIC;
			InstructionNumber       : 		IN STD_LOGIC_VECTOR(7 DOWNTO 0);
			InstructionOut 	        : 		OUT STD_LOGIC_vECTOR(15 DOWNTO 0));
END DataMemory;

ARCHITECTURE dataArchitecture OF DataMemory IS
			TYPE rom_array IS ARRAY (0 TO 15) OF STD_LOGIC_VECTOR (15 DOWNTO 0);
			CONSTANT rom: rom_array := ( 
			"0001000000000010", "0001010000000011", "0010000100000000", "0010000100000000",
			"0010000100000000", "0010000100000000", "0010000100000000", "0010000100000000",
			"0010000100000000", "0010000100000000", "0010000100000000", "0010000100000000",
			"0010000100000000", "0010000100000000", "0010000100000000", "0010000100000000");
BEGIN
	PROCESS (Clock)
	BEGIN
		IF rising_edge(Clock) THEN
			InstructionOut <= rom(to_integer(unsigned(InstructionNumber)));
		END IF;
	END PROCESS;
END dataArchitecture;