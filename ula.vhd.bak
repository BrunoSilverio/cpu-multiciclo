LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_signed.all ;

ENTITY ula IS
PORT(
	Cin 				:IN 	STD_LOGIC_VECTOR(1 DOWNTO 0);
	Op 				:IN 	STD_LOGIC_VECTOR(1 DOWNTO 0);
	A, B				:IN 	STD_LOGIC_VECTOR(7 DOWNTO 0);
	Result 			:OUT 	STD_LOGIC_VECTOR(7 DOWNTO 0);
	Overflow, Cout, Zero :OUT 	STD_LOGIC
);
END ula;

ARCHITECTURE LogicFunction OF ula IS
	SIGNAL Sum, Sub, ResultAnd, ResultOr : STD_LOGIC_VECTOR(7 DOWNTO 0);
	SIGNAL Aux : STD_LOGIC_VECTOR(7 DOWNTO 0);
	SIGNAL Co, Ov : STD_LOGIC_VECTOR(1 DOWNTO 0);
	
	COMPONENT adder
		PORT(	Cin		:	IN		STD_LOGIC;
				A,B		:	IN		STD_LOGIC_VECTOR(7 DOWNTO 0);
				S			:	OUT	STD_LOGIC_VECTOR(7 DOWNTO 0);
				Cout		:	OUT	STD_LOGIC;
				Overflow	:	OUT	STD_LOGIC);
	END COMPONENT;
BEGIN
	Aux <= NOT B + 1;
	
	stageAnd:	ResultAnd <= A AND B;
	stageOr:		ResultOr <= A OR B;
	stageSum:	adder PORT MAP('0', A, B, Sum, Co(0), Ov(0));
	stageSub:	adder PORT MAP('0', A, Aux, Sub, Co(1), Ov(1));
	
	PROCESS (OP, ResultAnd, ResultOr, Sum, Sub, Co, Ov)
	BEGIN
	CASE Op IS
		WHEN "00" => Result <= ResultAnd; --and
						 Cout <= '0';
						 Overflow <= '0';
						 IF(ResultAnd = "0000000") THEN
							Zero <= '1';
						 ELSE
							Zero <= '0';
						 END IF;
		WHEN "01" => Result <= ResultOr; --or
						 Cout <= '0';
						 Overflow <= '0';
						 IF(ResultOr = "0000000") THEN
							Zero <= '1';
						 ELSE
							Zero <= '0';
						 END IF;
		WHEN "10" => Result <= Sum; --add
						 Cout <= Co(0);
						 Overflow <= Ov(0);
						 IF(Sum = "0000000") THEN
							Zero <= '1';
						 ELSE
							Zero <= '0';
						 END IF;
		WHEN "11" => Result <= Sub; --sub
						 Cout <= Co(1);
						 Overflow <= Ov(1);
						 IF(Sub = "0000000") THEN
							Zero <= '1';
						 ELSE
							Zero <= '0';
						 END IF;
		WHEN OTHERS => Result <= "00000000";
							Cout <= '0';
						   Overflow <= '0';
							Zero <= '0';
		END CASE;
	END PROCESS;
END LogicFunction;